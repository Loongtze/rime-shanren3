####
####default.custom.yaml

patch:
  schema_list:    # 设定选用的输入方案。
    - {schema: sunman}
    - {schema: shanren3}
    - {schema: devanagari}
    - {schema: iast}
    - {schema: tibetan}
    - {schema: mipa}
    - {schema: terra_pinyin}
    - {schema: shanren00}

  menu/page_size: 4

  switcher/caption: 〔方案選單〕
  switcher/hotkeys:  #呼出“方案选单”（输入方案选项）的快捷键
    - "Control+m"
    - "Control+grave"  #與IBus一致的表示法 Ctrl+`
  switcher/option_list_separator: "|"
  switcher/abbreviate_options: true
  switcher/fold_options: true

  switcher/save_options:
    - full_shape
    - ascii_punct
    - simplification
    - extended_charset


  ascii_composer/good_old_caps_lock: true   ##默認輸出大寫字母。false默認小寫。
  ascii_composer/switch_key:
    Caps_Lock: commit_code  #並改變大小寫。noop只改變大小寫。
    Control_L: noop
    Control_R: noop
    Shift_L: inline_ascii
    Shift_R: commit_code


  key_binder/bindings:    #快捷键
    # Emacs style
    - { when: always, accept: Control+slash, toggle: full_shape }
    - { when: always, accept: Control+j, toggle: simplification }
#    - { when: paging, accept: apostrophe, send: Page_Up } #引號
#    - { when: has_menu, accept: slash, send: Page_Down } #/
#    - { when: has_menu, accept: comma, send: 2 } #逗号
#    - { when: has_menu, accept: period, send: 3 } #句号
    # Emacs style   以下是固有的，不加會被刪掉。
    - { when: composing, accept: Control+p, send: Up }
    - { when: composing, accept: Control+n, send: Down }
    - { when: composing, accept: Control+b, send: Left }
    - { when: composing, accept: Control+f, send: Right }
    - { when: composing, accept: Control+a, send: Home }
    - { when: composing, accept: Control+e, send: End }
    - { when: composing, accept: Control+d, send: Delete }
    - { when: composing, accept: Control+k, send: Shift+Delete }
    - { when: composing, accept: Control+h, send: BackSpace }
    - { when: composing, accept: Control+g, send: Escape }
    - { when: composing, accept: Control+bracketleft, send: Escape }
    - { when: composing, accept: Alt+v, send: Page_Up }
    - { when: composing, accept: Control+v, send: Page_Down }
    # paging keys
    - { when: composing, accept: ISO_Left_Tab, send: Page_Up }
    - { when: composing, accept: Shift+Tab, send: Page_Up }
    - { when: composing, accept: Tab, send: Page_Down }
    - { when: paging, accept: minus, send: Page_Up } #减号has_menu
    - { when: has_menu, accept: equal, send: Page_Down } #等号
#    - { when: paging, accept: comma, send: Page_Up } #逗号
#    - { when: has_menu, accept: period, send: Page_Down } #句号
    # hotkey switch
    - { when: always, accept: Control+Shift+1, select: .next }
    - { when: always, accept: Control+Shift+2, toggle: ascii_mode }
    - { when: always, accept: Control+Shift+3, toggle: full_shape }
    - { when: always, accept: Control+Shift+4, toggle: simplification }
    - { when: always, accept: Control+Shift+5, toggle: extended_charset }
    - { when: always, accept: Control+Shift+exclam, select: .next }
    - { when: always, accept: Control+Shift+at, toggle: ascii_mode }
    - { when: always, accept: Control+Shift+numbersign, toggle: full_shape }
    - { when: always, accept: Control+Shift+dollar, toggle: simplification }
    - { when: always, accept: Control+Shift+percent, toggle: extended_charset }
    - { when: always, accept: Shift+space, toggle: full_shape } #
    - { when: always, accept: Control+period, toggle: ascii_punct } #句号

  punctuator/full_shape:
    ' ' : { commit: '　' }
    ',' : { commit: ， }
    '.' : { commit: 。 }
    '<' : [ 《, 〈, «, ‹, ˂, ˱ ]
    '>' : [ 》, 〉, », ›, ˃, ˲ ]
    '/' : { commit: 、 }
    '?' : { commit: ？ }
    ';' : { commit: ； }
    ':' : { commit: ： }
    '''' : { pair: [ '‘', '’' ] }
    '"' : { pair: [ '“', '”' ] }
    '\' : [ ＼, ÷, ／, ､ ]
    '|' : [ ・, ｜, '§', '¦', '‖' ]
    '`' : [ ｀, ‵, ‶, ‷, ′, ″, ‴, ⁗ ]
    '~' : [ 〜, ～, 〰, ˜, ˷, ⸯ, ≈, ≋, ≃, ≅, ≇, ∽, ⋍, ≌, ﹏, ﹋, ﹌, ⌇ ]
    '!' : { commit: ！ }
    '@' : [ ＠, ☯, ©, ®, ℗ ]
    '#' : [ ＃, ⌘, № ]
    '%' : [ ％, '°', '℃', ‰, ‱, ℉, ℅, ℆, ℀, ℁, ⅍ ]
    '$' : [ ￥, '$', '€', '£', '¥', '¢', '¤', ₩ ]
    '^' : { commit: …… }
    '&' : ＆
    '*' : [ ＊, ・, ·, ．, ﹒, •, ×, ※, ╳, ❂, ⁂, ☮, ☯, ☣ ]
    '(' : （
    ')' : ）
    '-' : [ －, ­, ‐, ‒, – ]
    '_' : ——
    '+' : ＋
    '=' : [ ＝, 々, 〃 ]
    '[' : [ 「, 【, 〔, ［, 〚, 〘 ]
    ']' : [ 」, 】, 〕, ］, 〛, 〙 ]
    '{' : [ 『, 〖, ﹝, ｛, ︻ ]
    '}' : [ 』, 〗, ﹞, ｝, ︼ ]
  punctuator/half_shape:
    ',' : ','
    '.' : '.'
    '<' : '<'
    '>' : '>'
    '/' : '/'
    '?' : '?'
    ';' : ';'
    ':' : ':'
    '''' : ''''
    '"' : '"'
    '\' : '\'
    '|' : '|'
    '`' : '`'
    '~' : '~'
    '!' : '!'
    '@' : '@'
    '#' : '#'
    '%' : '%'
    '$' : '$'
    '^' : '^'
    '&' : '&'
    '*' : '*'
    '(' : '('
    ')' : ')'
    '-' : '-'
    '_' : '_'
    '+' : '+'
    '=' : '='
    '[' : '['
    ']' : ']'
    '{' : '{'
    '}' : '}'
